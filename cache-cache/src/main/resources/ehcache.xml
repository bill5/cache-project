<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://ehcache.org/ehcache.xsd"
    updateCheck="false">
  
  	<!-- 支持 内存 + 磁盘 + 堆外内存  几个层级的缓存  一般不用设置-->
    <diskStore path="java.io.tmpdir/Tmp_EhCache" />
    
    <!-- defaultCache 默认的缓存策略，如果指定的缓存策略没有找到，那么就使用默认的缓存策略 -->
    <!-- external true: 缓存一直会存在;一般默认为false,结合timeout -->
    <!-- maxElementsInMemory 内存中可以缓存多少数据 -->
    <!-- overflowToDisk 如果内存不够，是否溢出到磁盘 -->
    <!-- diskPersistent 是否启动磁盘持久化机制-->
    <!-- timeToIdleSeconds 对象最大的闲置时间，如果超出闲置时间，可能就会过期，缓存就会被清理 ,比如 ：300 即 5分钟-->
    <!-- timeToLiveSeconds 对象最多存活的时间 ,可能就会过期，缓存就会被清理 -->
    <!-- memoryStoreEvictionPolicy 当缓存数据达到最大指定的 maxElementsInMemory，需要采用一定的算法，从缓存中清除一批数据，LRU，最近最少使用算法，最近一段时间内，最少使用的那些数据，缓存就会被清理  -->
    <defaultCache
        eternal="false"
        maxElementsInMemory="1000"
        overflowToDisk="false"
        diskPersistent="false"
        timeToIdleSeconds="300"
        timeToLiveSeconds="0"
        memoryStoreEvictionPolicy="LRU" />
 
    <cache
        name="local"  
        eternal="false"
        maxElementsInMemory="1000"
        overflowToDisk="false"
        diskPersistent="false"
        timeToIdleSeconds="300"
        timeToLiveSeconds="0"
        memoryStoreEvictionPolicy="LRU" />
      
</ehcache>